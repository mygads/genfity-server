services:
  genfity-event-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: genfity-event-api
    environment:
      - DB_HOST=genfity-postgres
      - DB_PORT=5432
      - DB_USER=genfity_user
      - DB_PASSWORD=genfity_password
      - DB_NAME=event_api_db
      - DB_SSLMODE=disable
      - PORT=8081
      - ENV=production
      - GIN_MODE=release
      - WEBHOOK_VERIFY_TOKEN=${WEBHOOK_VERIFY_TOKEN:-default_webhook_token}
      - TZ=${TZ:-Asia/Jakarta}
    ports:
      - "8081:8081"  # Only exposed in dev profile
    networks:
      - genfity-network
    depends_on:
      - db-check
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    profiles:
      - dev
      - prod

  db-check:
    image: postgres:16-alpine
    container_name: eventapi-db-check
    environment:
      - PGHOST=genfity-postgres
      - PGPORT=5432
      - PGUSER=genfity_user
      - PGPASSWORD=genfity_password
      - PGDATABASE=event_api_db
    networks:
      - genfity-network
    command: >
      sh -c "
        echo 'Checking database connection...'
        until pg_isready -h genfity-postgres -p 5432 -U genfity_user -d postgres; do
          echo 'Waiting for PostgreSQL server...'
          sleep 2
        done
        echo 'PostgreSQL server is ready!'
        
        echo 'Checking if database exists...'
        if psql -h genfity-postgres -U genfity_user -d postgres -lqt | cut -d \\| -f 1 | grep -qw event_api_db; then
          echo 'Database event_api_db exists'
        else
          echo 'Database event_api_db does not exist, creating...'
          psql -h genfity-postgres -U genfity_user -d postgres -c 'CREATE DATABASE event_api_db;'
          echo 'Database event_api_db created'
        fi
        
        echo 'Running migrations if needed...'
        echo 'Database check completed successfully'
      "
    profiles:
      - dev
      - prod

networks:
  genfity-network:
    external: true

# ==========================================
# Usage:
#   Dev (app only, uses shared db):
#     docker compose --profile dev up -d
#
#   Prod (app with reverse proxy + SSL):
#     docker compose --profile prod up -d
# ==========================================
